export primitive length : Array<a> -> Number = "@array.length"
export primitive make : (Number, a) -> Array<a> = "@array.make"
export primitive init : (Number, Number -> a) -> Array<a> = "@array.init"

export let forEach = (array, fn) => {
  let length = length(array)
  let count = box(0)
  while (unbox(count) < length) {
    fn(array[unbox(count)])
    count := incr(unbox(count))
  }
}

export let forEachi = (array, fn) => {
  let length = length(array)
  let count = box(0)
  while (unbox(count) < length) {
    fn(array[unbox(count)], unbox(count))
    count := incr(unbox(count))
  }
}
