export *

let fromNumber = coerceNumberToFloat64
let toNumber = coerceFloat64ToNumber

import foreign wasm numberIncr : Float64 -> Float64 as incr from 'stdlib-external/runtime'
import foreign wasm numberDecr : Float64 -> Float64 as decr from 'stdlib-external/runtime'
import foreign wasm numberPlus : (Float64, Float64) -> Float64 as plus from 'stdlib-external/runtime'
import foreign wasm numberMinus : (Float64, Float64) -> Float64 as minus from 'stdlib-external/runtime'
import foreign wasm numberTimes : (Float64, Float64) -> Float64 as times from 'stdlib-external/runtime'
import foreign wasm numberDivide : (Float64, Float64) -> Float64 as divide from 'stdlib-external/runtime'
import foreign wasm numberMod : (Float64, Float64) -> Float64 as mod from 'stdlib-external/runtime'

# Float64 comparisons
import foreign wasm numberLess : (Float64, Float64) -> Bool as lt from 'stdlib-external/runtime'
import foreign wasm numberGreater : (Float64, Float64) -> Bool as gt from 'stdlib-external/runtime'
import foreign wasm numberLessEqual : (Float64, Float64) -> Bool as lte from 'stdlib-external/runtime'
import foreign wasm numberGreaterEqual : (Float64, Float64) -> Bool as gte from 'stdlib-external/runtime'
